# Generated by Django 5.1 on 2024-09-29 15:46

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Builder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('zone', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Застройщики',
                'verbose_name_plural': 'Застройщик',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='PhotoGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromotionConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_type', models.CharField(choices=[('standard', 'Стандарт'), ('premium', 'Премиум'), ('top', 'Топ')], max_length=20, unique=True)),
                ('cost_per_day', models.PositiveIntegerField()),
                ('discount_7_days', models.FloatField(default=0.1)),
                ('discount_14_days', models.FloatField(default=0.15)),
                ('discount_30_days', models.FloatField(default=0.2)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('account_type', models.CharField(choices=[('individual', 'Individual'), ('professional', 'Professional')], default='individual', max_length=20)),
                ('photo', models.ImageField(blank=True, upload_to='images/')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_confirm', models.BooleanField(blank=True, default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователь',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Фотографии',
                'verbose_name_plural': 'Фото',
            },
        ),
        migrations.CreateModel(
            name='AdvertisementPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(null=True)),
                ('image', models.ImageField(upload_to='advertisement_photos/')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('isMain', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('photo_group', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='estatemaster.photogroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('realtor', 'Риелтор'), ('agency', 'Агентство'), ('developer', 'Застройщик')], default='realtor', max_length=10)),
                ('place_of_work', models.CharField(blank=True, max_length=100, null=True)),
                ('bd', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('working_hours_start', models.TimeField(blank=True, null=True)),
                ('working_hours_end', models.TimeField(blank=True, null=True)),
                ('experience', models.PositiveIntegerField(blank=True, null=True)),
                ('is_macler', models.BooleanField(blank=True, null=True)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('about_company', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('date_company', models.DateField(blank=True, null=True)),
                ('how_houses', models.PositiveIntegerField(blank=True, null=True)),
                ('how_houses_building', models.PositiveIntegerField(blank=True, null=True)),
                ('count_zhk', models.PositiveIntegerField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('rental_types', models.CharField(blank=True, choices=[('жилая', 'Жилая'), ('загородная', 'Загородная'), ('зарубежная', 'Зарубежная'), ('коммерческая', 'Коммерческая')], max_length=255, null=True)),
                ('mortgage_types', models.CharField(blank=True, choices=[('ипотека', 'Ипотека'), ('рефинансирование', 'Рефинансирование')], max_length=255, null=True)),
                ('other_services', models.CharField(blank=True, choices=[('страхование', 'Страхование'), ('нотариат', 'Нотариат'), ('управление_объектами', 'Управление объектами'), ('строительство', 'Строительство'), ('консультация', 'Консультация'), ('дизайн_интерьера', 'Дизайн интерьера'), ('ремонт', 'Ремонт'), ('архитектура', 'Архитектура')], max_length=255, null=True)),
                ('sale_types', models.CharField(blank=True, choices=[('жилая', 'Жилая'), ('коммерческая', 'Коммерческая'), ('загородная', 'Загородная'), ('зарубежная', 'Зарубежная')], max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professional_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Проф пользователь',
                'verbose_name_plural': 'Проф пользователи',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_type', models.CharField(choices=[('standard', 'Стандарт'), ('premium', 'Премиум'), ('top', 'Топ')], default='standard', max_length=20)),
                ('duration', models.PositiveIntegerField(choices=[(1, 'Посуточно'), (7, '7 дней'), (14, '14 дней'), (30, '30 дней')])),
                ('config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.promotionconfig')),
            ],
        ),
        migrations.CreateModel(
            name='RentCommercialAdvertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accountType', models.CharField(blank=True, choices=[('owner', 'Собственник'), ('agent', 'Агент')], default='owner', max_length=20)),
                ('dealType', models.CharField(blank=True, choices=[('sale', 'Продажа'), ('rent', 'Аренда')], default='sale', max_length=100)),
                ('estateType', models.CharField(blank=True, choices=[('residential', 'Жилая'), ('commercial', 'Коммерческая')], max_length=50)),
                ('obj', models.CharField(choices=[('office', 'Офис'), ('building', 'Здание'), ('retail_space', 'Торговая площадь'), ('free_place', 'Помещение свободного назначения'), ('production', 'Производство'), ('warehouse', 'Склад'), ('garage', 'Гараж'), ('business', 'Бизнес'), ('commercial_land', 'Коммерческая земля')], max_length=100)),
                ('address', models.CharField(max_length=400, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lng', models.FloatField(blank=True)),
                ('nearestStop', models.CharField(max_length=400, null=True)),
                ('minutesBusStop', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('pathType', models.CharField(choices=[('foot', 'Пешком'), ('transport', 'Транспорт')], default='foot', max_length=20, null=True)),
                ('taxNumber', models.PositiveIntegerField()),
                ('totalArea', models.PositiveIntegerField()),
                ('ceilingHeight', models.FloatField(blank=True, default=0)),
                ('floor', models.PositiveIntegerField(null=True)),
                ('floorsHouse', models.PositiveIntegerField(null=True)),
                ('legalAddress', models.BooleanField(blank=True, null=True)),
                ('isRoomOccupied', models.BooleanField(blank=True, null=True)),
                ('planning', models.CharField(choices=[('open', 'Открытая'), ('corridor', 'Коридор'), ('cabinet', 'Кабинетная'), (None, '')], max_length=30, null=True)),
                ('numberWetSpots', models.CharField(blank=True, choices=[(False, 'Нет'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('more_five', '5 и больше'), ('null', 'null')], max_length=50, null=True)),
                ('electricPower', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('office_decoration', 'Офисная отделка'), ('finished', 'Под чистовую отделку'), ('major_repairs_required', 'Требуется капитальный ремонт'), ('cosmetic_repairs_required', 'Требуется косметический ремонт')], max_length=100)),
                ('furniture_c', models.BooleanField(blank=True)),
                ('access', models.CharField(blank=True, choices=[('free', 'Свободный'), ('passing_system', 'Пропускная система')], max_length=30, null=True)),
                ('parking', models.CharField(blank=True, choices=[('ground', 'Наземная'), ('multiLevel', 'Многоуровневая'), ('underground', 'Подземная'), ('in_roof', 'На крыше')], max_length=30, null=True)),
                ('numberParkingPlaces', models.PositiveIntegerField(blank=True, null=True)),
                ('parkingFees', models.CharField(blank=True, choices=[('paid', 'Платная'), ('free', 'Бесплатная')], max_length=30, null=True)),
                ('parkingPrice', models.PositiveIntegerField(blank=True, null=True)),
                ('parkingCurreny', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('buildingName', models.CharField(max_length=200)),
                ('yearBuilt', models.PositiveIntegerField(blank=True, null=True)),
                ('buildingType', models.CharField(blank=True, choices=[('administrative_building', 'Административное здание'), ('business_center', 'Бизнес-центр'), ('shopping_center', 'Торговый центр'), ('warehouse_complex', 'Складской комплекс'), ('industrial_park', 'Промышленный парк'), ('production_complex', 'Производственный комплекс'), ('multifunctional_complex', 'Многофункциональный комплекс'), ('logistics_complex', 'Логистический комплекс'), ('outlet', 'Аутлет'), ('other', 'Другое')], default='other', max_length=50, null=True)),
                ('buildingClass', models.CharField(blank=True, choices=[('A', 'A'), ('A+', 'A+'), ('B', 'B'), ('B+', 'B+'), ('B-', 'B-'), ('C', 'C')], max_length=3, null=True)),
                ('buildingArea', models.PositiveIntegerField(blank=True)),
                ('plot', models.CharField(blank=True, max_length=20)),
                ('category', models.CharField(blank=True, choices=[('valid', 'Действующее'), ('project', 'Проект'), ('under_construction', 'Строящееся')], max_length=30, null=True)),
                ('developer', models.CharField(blank=True, max_length=200)),
                ('managementCompany', models.CharField(blank=True, max_length=200)),
                ('ventilation', models.CharField(blank=True, choices=[('natural', 'Естественная'), ('inflow', 'Приточная'), ('none', 'Нет')], max_length=30, null=True)),
                ('сonditioning', models.CharField(blank=True, choices=[('local', 'Местное'), ('central', 'Центральное'), ('none', 'Нет')], max_length=30, null=True)),
                ('heating', models.CharField(blank=True, choices=[('autonomous', 'Автономное'), ('central', 'Центральное'), ('none', 'Нет')], max_length=30, null=True)),
                ('fireExtinguishingSystem', models.CharField(blank=True, choices=[('hydrant', 'Гидрантная'), ('sprinkler', 'Спринклерная'), ('powder', 'Порошковая'), ('gas', 'Газовая'), ('alarm', 'Сигнализация'), ('none', 'Нет')], max_length=30, null=True)),
                ('infrastructure', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('carWash', 'Автомойка'), ('autoService', 'Автосервис'), ('pharmacy', 'Аптека'), ('clothingTailor', 'Ателье одежды'), ('atm', 'Банкомат'), ('swimmingPool', 'Бассейн'), ('buffet', 'Буфет'), ('exhibitionWarehouseComplex', 'Выставочно-складской комплекс'), ('hotel', 'Гостиница'), ('cafe', 'Кафе'), ('cinema', 'Кинотеатр'), ('conferenceHall', 'Конференц-зал'), ('medicalCenter', 'Медицинский центр'), ('miniMarket', 'Минимаркет'), ('notaryOffice', 'Нотариальная контора'), ('bankBranch', 'Отделение банка'), ('park', 'Парк'), ('restaurant', 'Ресторан'), ('beautySalon', 'Салон красоты'), ('warehouse', 'Складское помещение'), ('diningRoom', 'Столовая'), ('supermarket', 'Супермаркет'), ('shoppingArea', 'Торговая зона'), ('fitnessCenter', 'Фитнес-центр'), ('centralReception', 'Центральная рецепция')], max_length=281, null=True)),
                ('youtubeLink', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('rent_per_month_per_m2', models.PositiveIntegerField(blank=True, null=True, verbose_name='Аренда в месяц за м2')),
                ('rent_per_year_per_m2', models.PositiveIntegerField(blank=True, null=True, verbose_name='Аренда в год за м2')),
                ('rent_per_month', models.PositiveIntegerField(blank=True, verbose_name='Аренда в месяц')),
                ('currency_rent_month_per_m2', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3, null=True)),
                ('currency_rent_year_per_m2', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3, null=True)),
                ('currency_rent_month', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('tax', models.CharField(blank=True, choices=[('VAT_included', 'Ндс включен'), ('tax_exempt', 'Ндс не облагается'), ('simplified_tax', 'Упрощенная налогообложения')], max_length=50, null=True)),
                ('utilityPayment', models.BooleanField(blank=True)),
                ('operatingСosts', models.BooleanField(blank=True, null=True)),
                ('rentalType', models.CharField(blank=True, choices=[('long-term', 'Долгосрочная'), ('short-term', 'Краткосрочная')], max_length=50)),
                ('minimumLeaseTerm', models.PositiveIntegerField(blank=True, verbose_name='Минимальный срок аренды (в месяцах)')),
                ('rentalHolidays', models.BooleanField(blank=True, null=True)),
                ('security_deposit', models.PositiveIntegerField(blank=True, verbose_name='Обеспечительный платеж')),
                ('currency_deposit', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('prepayment', models.CharField(choices=[('4months', '4 мес'), ('5months', '5 мес'), ('6months', '6 мес'), ('7months', '7 мес'), ('8months', '8 мес'), ('9months', '9 мес'), ('10months', '10 мес'), ('11months', '11 мес'), ('1year', 'Год')], default='year', max_length=15)),
                ('agentBonus', models.CharField(choices=[('none', 'Нет'), ('fixed_sum', 'Фиксированная сумма'), ('percentage_of_deal', 'Процент от сделки')], default='false', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Телефон')),
                ('whatsApp', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.location')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Комерческие аренды',
                'verbose_name_plural': 'Комерческая аренда',
            },
        ),
        migrations.CreateModel(
            name='RentDayAdvertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accountType', models.CharField(blank=True, choices=[('owner', 'Собственник'), ('agent', 'Агент')], default='owner', max_length=20)),
                ('dealType', models.CharField(blank=True, choices=[('sale', 'Продажа'), ('rent', 'Аренда')], default='sale', max_length=100)),
                ('estateType', models.CharField(blank=True, choices=[('residential', 'Жилая')], default='residential', max_length=50)),
                ('leaseType', models.CharField(blank=True, choices=[('longTerm', 'Длительно'), ('daily', 'Посуточно')], max_length=70)),
                ('obj', models.CharField(blank=True, choices=[('flat', 'Квартира'), ('room', 'Комната'), ('house', 'Дом'), ('place', 'Койко-место')], max_length=100)),
                ('nearest_stop', models.CharField(blank=True, max_length=400, null=True)),
                ('minute_stop', models.CharField(blank=True, max_length=400, null=True)),
                ('transport', models.CharField(blank=True, choices=[('foot', 'Пешком'), ('car', 'Транспорт')], default='foot', max_length=20)),
                ('address', models.CharField(max_length=400, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lng', models.FloatField(blank=True)),
                ('nearestStop', models.CharField(max_length=400, null=True)),
                ('minutesBusStop', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('pathType', models.CharField(choices=[('foot', 'Пешком'), ('transport', 'Транспорт')], default='foot', max_length=20)),
                ('floor', models.PositiveIntegerField()),
                ('floorsHouse', models.PositiveIntegerField()),
                ('flatNumber', models.PositiveIntegerField(blank=True, default=0)),
                ('roomsNumber', models.CharField(choices=[('studio', 'Студия'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('overSix', '6'), ('freePlanning', 'Свободная планировка')], max_length=20)),
                ('totalArea', models.PositiveIntegerField(blank=True, default=0)),
                ('livingArea', models.PositiveIntegerField(blank=True, null=True)),
                ('kitchenArea', models.PositiveIntegerField(blank=True, null=True)),
                ('propertyType', models.CharField(choices=[('flat', 'Квартира'), ('apartments', 'Апартаменты')], max_length=30)),
                ('youtubeLink', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('daily_price', models.PositiveIntegerField(blank=True, default=0, verbose_name='Цена за сутки')),
                ('daily_price_currency', models.CharField(blank=True, choices=[('MZN', 'MZN'), ('USD', 'USD'), ('EUR', 'EUR')], default='MZN', max_length=3)),
                ('guestsNumber', models.PositiveIntegerField(blank=True)),
                ('deposit', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Залог')),
                ('deposit_currency', models.CharField(blank=True, choices=[('MZN', 'MZN'), ('USD', 'USD'), ('EUR', 'EUR')], default='MZN', max_length=3, null=True)),
                ('furniture', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('noFurniture', 'Без мебели'), ('inKitchen', 'На кухне'), ('inRooms', 'В комнатах')], max_length=29, null=True)),
                ('bathroom_choice', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('bath', 'Ванна'), ('showerRoom', 'Душевая кабина')], max_length=15, null=True)),
                ('tech', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('conditioner', 'Кондиционер'), ('fridge', 'Холодильник'), ('tv', 'Телевизор'), ('dishwasher', 'Посудомоечная машина'), ('washingmMachine', 'Стиральная машина')], max_length=48, null=True)),
                ('communication', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('internet', 'Интернет'), ('phone', 'Телефон')], max_length=14, null=True)),
                ('living_conditions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('allowed_with_children', 'Можно с детьми'), ('allowed_with_pets', 'Можно с животными')], max_length=39, null=True, verbose_name='Условия проживания')),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('whatsApp', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.location')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Аренда посуточная продажи',
                'verbose_name_plural': 'Аренда посуточная продажа',
            },
        ),
        migrations.CreateModel(
            name='RentLongAdvertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accountType', models.CharField(blank=True, choices=[('owner', 'Собственник'), ('agent', 'Агент')], default='owner', max_length=20)),
                ('dealType', models.CharField(blank=True, choices=[('sale', 'Продажа'), ('rent', 'Аренда')], default='sale', max_length=100)),
                ('estateType', models.CharField(blank=True, choices=[('residential', 'Жилая'), ('commercial', 'Коммерческая')], max_length=50)),
                ('leaseType', models.CharField(blank=True, choices=[('longTerm', 'Длительно'), ('daily', 'Посуточно')], max_length=70)),
                ('obj', models.CharField(choices=[('flat', 'Квартира'), ('flatNewBuilding', 'Квартира в новостройке'), ('room', 'Комната'), ('flatShare', 'Доля в квартире'), ('house', 'Дом'), ('cottage', 'Коттедж'), ('tanhouse', 'Таунхаус'), ('partHouse', 'Часть дома'), ('plot', 'Участок')], max_length=100)),
                ('address', models.CharField(max_length=400, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lng', models.FloatField(blank=True)),
                ('nearestStop', models.CharField(max_length=400, null=True)),
                ('minutesBusStop', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('pathType', models.CharField(choices=[('foot', 'Пешком'), ('transport', 'Транспорт')], default='foot', max_length=20)),
                ('floor', models.PositiveIntegerField()),
                ('floorsHouse', models.PositiveIntegerField()),
                ('flatNumber', models.PositiveIntegerField(blank=True, default=0)),
                ('roomsNumber', models.CharField(choices=[('studio', 'Студия'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('overSix', '6'), ('freePlanning', 'Свободная планировка')], max_length=20)),
                ('totalArea', models.PositiveIntegerField(blank=True, default=0)),
                ('livingArea', models.PositiveIntegerField(blank=True, null=True)),
                ('kitchenArea', models.PositiveIntegerField(blank=True, null=True)),
                ('propertyType', models.CharField(choices=[('flat', 'Квартира'), ('apartments', 'Апартаменты')], max_length=30)),
                ('youtubeLink', models.CharField(blank=True, max_length=300, null=True)),
                ('viewFromWindow', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('outside', 'На улицу'), ('courtyard', 'Во двор'), ('atSea', 'На море')], max_length=23, null=True)),
                ('balconies', models.PositiveIntegerField(default=0)),
                ('loggia', models.PositiveIntegerField(default=0)),
                ('separateBathroom', models.PositiveIntegerField(default=0)),
                ('combinedBathroom', models.PositiveIntegerField(default=0)),
                ('repair', models.CharField(blank=True, choices=[('unrepaired', 'Без ремонта'), ('cosmetic', 'Косметический'), ('euro', 'Евро'), ('designer', 'Дизайнерский')], max_length=70, null=True)),
                ('freightElevator', models.PositiveIntegerField(default=0)),
                ('passengerElevator', models.PositiveIntegerField(default=0)),
                ('apartmentEntrance', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('ramp', 'Пандус'), ('trashChute', 'Мусоропровод')], max_length=15, null=True)),
                ('parking', models.CharField(blank=True, choices=[('ground', 'Наземная'), ('multiLevel', 'Многоуровневая'), ('underground', 'Подземная'), ('rooftop', 'На крыше')], max_length=30, null=True)),
                ('furniture', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('noFurniture', 'Без мебели'), ('inKitchen', 'На кухне'), ('inRooms', 'В комнатах')], max_length=29, null=True)),
                ('bathroom', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('bath', 'Ванна'), ('showerRoom', 'Душевая кабина')], max_length=15, null=True)),
                ('apartment', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('conditioner', 'Кондиционер'), ('fridge', 'Холодильник'), ('tv', 'Телевизор'), ('dishwasher', 'Посудомоечная машина'), ('washingmMachine', 'Стиральная машина')], max_length=48, null=True)),
                ('connection', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('internet', 'Интернет'), ('phone', 'Телефон')], max_length=14, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('rent_per_month', models.PositiveIntegerField()),
                ('currency_per_month', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'USD'), ('EUR', 'EUR')], default='MZN', max_length=3)),
                ('utilityPayment', models.CharField(choices=[('owner', 'Собственник'), ('tenant', 'Арендатор')], max_length=70)),
                ('prepaymentPeriod', models.CharField(blank=True, choices=[('1_month', 'За 1 месяц'), ('2_months', '2 месяца'), ('3_months', '3 месяца'), ('4+_months', '4+')], max_length=70)),
                ('currency', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'USD'), ('EUR', 'EUR')], default='MZN', max_length=3)),
                ('deposit', models.PositiveIntegerField(blank=True)),
                ('rentalTerm', models.CharField(choices=[('several_months', 'Несколько месяцев'), ('year', 'От года')], max_length=70)),
                ('livingConditions', models.CharField(blank=True, choices=[('allowed_with_children', 'Можно с детьми'), ('allowed_with_pets', 'Можно с животными')], max_length=100, null=True, verbose_name='Условия проживания')),
                ('phone', models.CharField(max_length=30)),
                ('whatsApp', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Аренда длительная продажа',
                'verbose_name_plural': 'Аренда длительная продажа',
            },
        ),
        migrations.CreateModel(
            name='SaleCommercialAdvertisement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accountType', models.CharField(blank=True, choices=[('owner', 'Собственник'), ('agent', 'Агент')], default='owner', max_length=20)),
                ('dealType', models.CharField(blank=True, choices=[('sale', 'Продажа'), ('rent', 'Аренда')], default='sale', max_length=100)),
                ('estateType', models.CharField(blank=True, choices=[('residential', 'Жилая'), ('commercial', 'Коммерческая')], max_length=50)),
                ('obj', models.CharField(choices=[('office', 'Офис'), ('building', 'Здание'), ('retail_space', 'Торговая площадь'), ('free_place', 'Помещение свободного назначения'), ('production', 'Производство'), ('warehouse', 'Склад'), ('garage', 'Гараж'), ('business', 'Бизнес'), ('commercial_land', 'Коммерческая земля')], max_length=100)),
                ('address', models.CharField(max_length=400, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lng', models.FloatField(blank=True)),
                ('nearestStop', models.CharField(max_length=400, null=True)),
                ('minutesBusStop', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('pathType', models.CharField(choices=[('foot', 'Пешком'), ('transport', 'Транспорт')], default='foot', max_length=20, null=True)),
                ('taxNumber', models.PositiveIntegerField()),
                ('totalArea', models.PositiveIntegerField()),
                ('ceilingHeight', models.FloatField(blank=True, default=0)),
                ('floor', models.PositiveIntegerField(null=True)),
                ('floorsHouse', models.PositiveIntegerField(null=True)),
                ('legalAddress', models.BooleanField(blank=True, null=True)),
                ('isRoomOccupied', models.BooleanField(blank=True, null=True)),
                ('planning', models.CharField(choices=[('open', 'Открытая'), ('corridor', 'Коридор'), ('cabinet', 'Кабинетная'), (None, '')], max_length=30, null=True)),
                ('numberWetSpots', models.CharField(blank=True, choices=[(False, 'Нет'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('more_five', '5 и больше'), ('null', 'null')], max_length=50, null=True)),
                ('electricPower', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('office_decoration', 'Офисная отделка'), ('finished', 'Под чистовую отделку'), ('major_repairs_required', 'Требуется капитальный ремонт'), ('cosmetic_repairs_required', 'Требуется косметический ремонт')], max_length=100)),
                ('furniture_c', models.BooleanField(blank=True)),
                ('access', models.CharField(blank=True, choices=[('free', 'Свободный'), ('passing_system', 'Пропускная система')], max_length=30, null=True)),
                ('parking', models.CharField(blank=True, choices=[('ground', 'Наземная'), ('multiLevel', 'Многоуровневая'), ('underground', 'Подземная'), ('in_roof', 'На крыше')], max_length=30, null=True)),
                ('numberParkingPlaces', models.PositiveIntegerField(blank=True, null=True)),
                ('parkingFees', models.CharField(blank=True, choices=[('paid', 'Платная'), ('free', 'Бесплатная')], max_length=30, null=True)),
                ('parkingPrice', models.PositiveIntegerField(blank=True, null=True)),
                ('parkingCurreny', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('buildingName', models.CharField(blank=True, max_length=200)),
                ('yearBuilt', models.PositiveIntegerField(blank=True, null=True)),
                ('buildingType', models.CharField(blank=True, choices=[('administrative_building', 'Административное здание'), ('business_center', 'Бизнес-центр'), ('shopping_center', 'Торговый центр'), ('warehouse_complex', 'Складской комплекс'), ('industrial_park', 'Промышленный парк'), ('production_complex', 'Производственный комплекс'), ('multifunctional_complex', 'Многофункциональный комплекс'), ('logistics_complex', 'Логистический комплекс'), ('outlet', 'Аутлет'), ('other', 'Другое')], default='other', max_length=50, null=True)),
                ('buildingClass', models.CharField(blank=True, choices=[('A', 'A'), ('A+', 'A+'), ('B', 'B'), ('B+', 'B+'), ('B-', 'B-'), ('C', 'C')], max_length=3, null=True)),
                ('buildingArea', models.PositiveIntegerField(blank=True)),
                ('plot', models.CharField(blank=True, max_length=20)),
                ('category', models.CharField(blank=True, choices=[('valid', 'Действующее'), ('project', 'Проект'), ('under_construction', 'Строящееся')], max_length=30, null=True)),
                ('developer', models.CharField(blank=True, max_length=200)),
                ('managementCompany', models.CharField(blank=True, max_length=200)),
                ('ventilation', models.CharField(blank=True, choices=[('natural', 'Естественная'), ('inflow', 'Приточная'), ('none', 'Нет')], max_length=30, null=True)),
                ('сonditioning', models.CharField(blank=True, choices=[('local', 'Местное'), ('central', 'Центральное'), ('none', 'Нет')], max_length=30, null=True)),
                ('heating', models.CharField(blank=True, choices=[('autonomous', 'Автономное'), ('central', 'Центральное'), ('none', 'Нет')], max_length=30, null=True)),
                ('fireExtinguishingSystem', models.CharField(blank=True, choices=[('hydrant', 'Гидрантная'), ('sprinkler', 'Спринклерная'), ('powder', 'Порошковая'), ('gas', 'Газовая'), ('alarm', 'Сигнализация'), ('none', 'Нет')], max_length=30, null=True)),
                ('infrastructure', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('carWash', 'Автомойка'), ('autoService', 'Автосервис'), ('pharmacy', 'Аптека'), ('clothingTailor', 'Ателье одежды'), ('atm', 'Банкомат'), ('swimmingPool', 'Бассейн'), ('buffet', 'Буфет'), ('exhibitionWarehouseComplex', 'Выставочно-складской комплекс'), ('hotel', 'Гостиница'), ('cafe', 'Кафе'), ('cinema', 'Кинотеатр'), ('conferenceHall', 'Конференц-зал'), ('medicalCenter', 'Медицинский центр'), ('miniMarket', 'Минимаркет'), ('notaryOffice', 'Нотариальная контора'), ('bankBranch', 'Отделение банка'), ('park', 'Парк'), ('restaurant', 'Ресторан'), ('beautySalon', 'Салон красоты'), ('warehouse', 'Складское помещение'), ('diningRoom', 'Столовая'), ('supermarket', 'Супермаркет'), ('shoppingArea', 'Торговая зона'), ('fitnessCenter', 'Фитнес-центр'), ('centralReception', 'Центральная рецепция')], max_length=281, null=True)),
                ('youtubeLink', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('total_price', models.PositiveIntegerField(blank=True, verbose_name='Цена за всё')),
                ('price_per_m2', models.PositiveIntegerField(blank=True, verbose_name='Цена за м2')),
                ('currency_total', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('currency_per', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('tax', models.CharField(blank=True, choices=[('VAT_included', 'Ндс включен'), ('tax_exempt', 'Ндс не облагается'), ('simplified_tax', 'Упрощенная налогообложения')], max_length=50)),
                ('agentBonus', models.CharField(blank=True, choices=[('none', 'Нет'), ('fixed_sum', 'Фиксированная сумма'), ('percentage_of_deal', 'Процент от сделки')], max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Телефон')),
                ('whatsApp', models.CharField(blank=True, max_length=30, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.location')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Комерческие продажи',
                'verbose_name_plural': 'Комерческая продажа',
            },
        ),
        migrations.CreateModel(
            name='SaleResidential',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('accountType', models.CharField(blank=True, choices=[('owner', 'Собственник'), ('agent', 'Агент')], default='owner', max_length=20)),
                ('dealType', models.CharField(blank=True, choices=[('sale', 'Продажа'), ('rent', 'Аренда')], default='sale', max_length=100)),
                ('estateType', models.CharField(blank=True, choices=[('residential', 'Жилая'), ('commercial', 'Коммерческая')], max_length=50)),
                ('obj', models.CharField(choices=[('flat', 'Квартира'), ('flatNewBuilding', 'Квартира в новостройке'), ('room', 'Комната'), ('flatShare', 'Доля в квартире'), ('house', 'Дом'), ('cottage', 'Коттедж'), ('tanhouse', 'Таунхаус'), ('partHouse', 'Часть дома'), ('plot', 'Участок')], max_length=100)),
                ('address', models.CharField(max_length=400, null=True)),
                ('lat', models.FloatField(blank=True)),
                ('lng', models.FloatField(blank=True)),
                ('nearestStop', models.CharField(max_length=400, null=True)),
                ('minutesBusStop', models.PositiveIntegerField(blank=True)),
                ('pathType', models.CharField(choices=[('foot', 'Пешком'), ('transport', 'Транспорт')], default='foot', max_length=20)),
                ('floor', models.PositiveIntegerField()),
                ('floorsHouse', models.PositiveIntegerField()),
                ('flatNumber', models.PositiveIntegerField(blank=True)),
                ('yearBuilt', models.PositiveIntegerField(blank=True, null=True)),
                ('ceilingHeight', models.FloatField(blank=True, default=0)),
                ('houseType', models.CharField(blank=True, choices=[('brick', 'Кирпичный'), ('monolithic', 'Монолитный'), ('panel', 'Панельный'), ('block', 'Блочный'), ('wooden', 'Деревянный')], max_length=100, null=True)),
                ('roomsNumber', models.CharField(choices=[('studio', 'Студия'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('overSix', '6'), ('freePlanning', 'Свободная планировка')], max_length=20)),
                ('totalArea', models.PositiveIntegerField()),
                ('livingArea', models.PositiveIntegerField(blank=True, null=True)),
                ('kitchenArea', models.PositiveIntegerField(blank=True, null=True)),
                ('propertyType', models.CharField(blank=True, choices=[('flat', 'Квартира'), ('apartments', 'Апартаменты')], max_length=30)),
                ('youtubeLink', models.CharField(blank=True, max_length=300, null=True)),
                ('balconies', models.PositiveIntegerField(default=0)),
                ('loggia', models.PositiveIntegerField(default=0)),
                ('viewFromWindow', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('outside', 'На улицу'), ('courtyard', 'Во двор'), ('atSea', 'На море')], max_length=23, null=True)),
                ('separateBathroom', models.PositiveIntegerField(default=0)),
                ('repair', models.CharField(blank=True, choices=[('unrepaired', 'Без ремонта'), ('cosmetic', 'Косметический'), ('euro', 'Евро'), ('designer', 'Дизайнерский')], max_length=70, null=True)),
                ('freightElevator', models.PositiveIntegerField(default=0)),
                ('passengerElevator', models.PositiveIntegerField(default=0)),
                ('combinedBathroom', models.PositiveIntegerField(default=0)),
                ('apartmentEntrance', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('ramp', 'Пандус'), ('trashChute', 'Мусоропровод')], max_length=15, null=True)),
                ('parking', models.CharField(blank=True, choices=[('ground', 'Наземная'), ('multiLevel', 'Многоуровневая'), ('underground', 'Подземная'), ('rooftop', 'На крыше')], max_length=30, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('description', models.TextField()),
                ('price', models.PositiveIntegerField()),
                ('currency', models.CharField(choices=[('MZN', 'MZN'), ('USD', 'Доллар'), ('EUR', 'Евро')], default='MZN', max_length=3)),
                ('saleType', models.CharField(blank=True, choices=[('onlySale', 'Только продаю'), ('buyingAnother', 'Одновременно покупаю другую')], max_length=50, null=True)),
                ('phone', models.CharField(max_length=30)),
                ('whatsApp', models.CharField(max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('region', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='estatemaster.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Жилые прожажи',
                'verbose_name_plural': 'Жилая продажа',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('advertisement_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные',
                'unique_together': {('user', 'advertisement_type', 'object_id')},
            },
        ),
    ]
